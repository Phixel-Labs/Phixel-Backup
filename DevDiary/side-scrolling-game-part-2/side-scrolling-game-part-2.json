{
    "title": "Let\u2019s Create a Game in HTML (Part 2) \ud83d\udd79\ufe0f \u2013 Set up the HTML and CSS",
    "content": "### Get ready to jump into the fun world of game development!\n\nGame development is an adventure that\u2019s both thrilling and a bit overwhelming. But with the right plan and guidance, you\u2019ll be on your way to creating an awesome game in no time!\n\nThat\u2019s where we come in. In this article, we\u2019ll walk you through the first part of our tutorial series on game development. Specifically, we\u2019ll focus on setting up the HTML and CSS for your game, which is a crucial first step in creating an awesome game.\n\nSo, buckle up and let\u2019s get started on this exciting journey together!\n\n## Step 1: Let\u2019s brainstorm our game idea!\n\n#### First things first, we need a killer idea, and we\u2019ve got one! Let\u2019s introduce you to our game\n\n### Super Jumper: Save Jumplandia!\n\n**Jax**, our hero, embarks on an epic quest to save the peaceful **Kingdom of Jumplandia** from an army of vicious creatures who have stolen a sacred crystal. Armed with his trusty jumping skills, **Jax** journeys through the different worlds of **Jumplandia**, overcoming various challenges and obstacles to restore peace to his beloved kingdom.\n\n## Step 2: Let\u2019s Get Coding!\n\nNow that we have our awesome story, it\u2019s time to bring it to life by creating our HTML and CSS. The first step in building a game is to design the layout and structure of our web page. So, let\u2019s dive in and create our index.html file with a basic structure\n\n#### A Simple Structure to Get Us Started\n\n```html\n<!DOCTYPE html>\n<html>\n <head>\n <!-- Add any necessary meta tags or external stylesheets here -->\n <\/head>\n <body>\n <!-- The fun starts here! Let's add some game elements -->\n <footer><\/footer>\n <\/body>\n<\/html>\n\n```\n\nNow we\u2019re ready to add some exciting game features and bring our hero, Jax, to life!\n\n#### Let\u2019s Make Our Game Stand Out with an Awesome Header!\n\nFirst impressions matter, so let\u2019s give our game a memorable header that players won\u2019t forget. We\u2019ll start by adding some basic SEO information, including the title and description of the game. Here\u2019s an example code that you can use as a starting point:\n\n```html\n<head>\n <!-- Set the character set and viewport -->\n <meta charset=\"UTF-8\">\n <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n <!-- Set the page title and description -->\n <title>Super Jumper: Save Jumplandia!<\/title>\n <meta name=\"description\" content=\"Get ready to jump into a world of adventure with Super Jumper!\">\n\n <!-- Include the custom scripts -->\n <script src=\"scripts\/functions.js\"><\/script>\n <script defer src=\"scripts\/game.js\"><\/script>\n\n <!-- Include the stylesheet -->\n <link rel=\"stylesheet\" href=\"css\/styles.css\" \/>\n<\/head>\n\n```\n\nWith this code, we\u2019ve set up the basic structure of our HTML file, added some essential SEO information, and included the custom scripts and stylesheets that we\u2019ll need for our game. Note that we added some JavaScript and CSS for future use. Now, to create the game container, we\u2019ll add a\n\nelement with an id of \u201cgame\u201d in the body of the HTML file. This will allow us to target this element with CSS and JavaScript to style and control the game.\n\n```html\n<!-- Create a game section for the game canvas -->\n<div id=\"game\"><\/div>\n\n```\n\nNow that we have our game container set up, it\u2019s time to add some flavor and information to our game! We\u2019ve decided to include a navigation sidebar with some options, such as play\/restart, access to the game story as a popup, and more information about the game. However, feel free to get creative and make your own sidebar that suits your game. In our final release, we added even more text, but for now, we\u2019ll keep it simple. Let\u2019s jump into the code and bring some life to our game!\n\n```html\n<!-- Create a navigation sidebar -->\n<nav class=\"sidebar\">\n\n <ul>\n <li><a href=\"#story\">Story<\/a><\/li>\n <li><a href=\"#about\">About<\/a><\/li>\n <li><a href=\"#reset\">Reset Game<\/a><\/li>\n <li><a href=\"#sound\">Toggle sound<\/a><\/li>\n <\/ul>\n<\/nav>\n<!-- Set the game story -->\n<article id=\"story\">\n <h1>Super Jumper: Save <b>Jumplandia<\/b>!<\/h1>\n <p>\n Welcome to Super Jumper, a platformer game that will have you jumping in world full of surprises!\n you waiting for?\n <\/p>\n<\/article>\n<!-- Set the page info -->\n<article id=\"about\">\n <h2>About Super Jumper<\/h2>\n <p>\n The game was built using HTML, CSS, and JavaScript, \n making it easy for anyone to understand the game.\n <\/p>\n<\/article>\n<!-- Create a game section for the game canvas -->\n<div id=\"game\"><\/div>\n\n```\n\n**Don\u2019t forget to give your footer some love!** Without it, our hero might just fall on its head before the adventure even begins.\n\n```html\n<!-- Create a footer for the page -->\n<footer>\n <span title=\"Copyright\">\u00a9<\/span> All rights reserved\n<\/footer>\n\n```\n\n## Step 3: Adding Some Style!\n\nGreat job on setting up the HTML structure for your game! Now, let\u2019s make it look good with some CSS.\n\nLet\u2019s organize our CSS files by creating a new folder called \u201cstyles\u201d. In that folder, we can create a CSS file to store all of our general CSS functions for the page. Let\u2019s name it \u201cstyles.css\u201d for simplicity.\n\nWe love retro-inspired colors, so let\u2019s use some 80s-inspired colors to give our game some personality. We\u2019ll cover all the basics with black, white, yellow, blue, red, orange, green, purple, and of course, neon pink. Let\u2019s create global root variables for these colors to make it easier to apply them throughout the CSS file, we will save these colors in a file called \u201ccolors.css\u201d.\n\n```css\n:root {\n --black: #000300;\n --white: #fffeff;\n --gray: #808191;\n --yellow: #faff00;\n --blue: #3a86ff;\n --red: #ff006e;\n --green: #89fc00;\n --orange: #fb5607;\n --purple: #8338ec;\n --pink: #f560e2;\n --cyan: #73d2de;\n --magenta: #ff206e;\n}\n\n```\n\nBut wait, there\u2019s more! We\u2019re going to take it to the next level by adding tones of light and dark. With a little creativity, your game will be the talk of the town.\n\nSo let\u2019s get started, grab your brushes and let\u2019s paint a masterpiece!\n\n```css\n:root {\n \/* Gray color palette *\/ --black: #000300; --white: #fffeff; --gray: #808191; --gray-dark: #5b5d69; --gray-light: #a9a9b5;\n \/* Yellow colors *\/ --yellow: #faff00; --yellow-dark: #b3a700; --yellow-light: #edff4d;\n \/* Blue colors *\/ --blue: #3a86ff; --blue-dark: #006fed; --blue-light: #87abff;\n \/* Red colors *\/ --red: #ff006e; --red-dark: #b3005c; --red-light: #ff4d8b;\n \/* Green colors *\/ --green: #89fc00; --green-dark: #6eb000; --green-light: #9dff4a;\n \/* Orange colors *\/ --orange: #fb5607; --orange-dark: #b32d03; --orange-light: #fc9752;\n \/* Purple colors *\/ --purple: #8338ec; --purple-dark: #4e13c5; --purple-light: #b87ef3;\n \/* Pink colors *\/ --pink: #f560e2; --pink-dark: #f018e7; --pink-light: #faa8e8;\n \/* Cyan colors *\/ --cyan: #73d2de; --cyan-dark: #35cbcf; --cyan-light: #b1e1ed;\n \/* Magenta colors *\/ --magenta: #ff206e; --magenta-dark: #d3005b;\n}\n\n```\n\nLet\u2019s take our color choices to the next level and make things even easier by setting up some classes to work with these colors. We can create classes for text, borders, and other elements to help keep things organized and consistent. And to make our lives even easier, we\u2019re going to use LESS (but feel free to use SASS or any other CSS preprocessor of your choice).\n\nAlright, let\u2019s see what we\u2019re working with! Take a look at this code featuring the lovely color pink as an example. This will give you a good idea of what your code should look like.\n\n```css\n\/* Pink colors *\/\n.pink-tx { color: var(--pink); }\n.pink-tx-hv:hover { color: var(--pink) !important; }\n.pink-bg { background-color: var(--pink); }\n.pink-bg-hv:hover { background-color: var(--pink) !important; }\n.pink-br{ border-color: var(--pink); }\n.pink-br-hv:hover { border-color: var(--pink) !important; }\n\n\/* Light Pink colors *\/\n.pink-tx.light { color: var(--pink-light); }\n.pink-tx-hv.light:hover { color: var(--pink-light) !important; }\n.pink-bg.light { background-color: var(--pink-light); }\n.pink-bg-hv.light:hover { background-color: var(--pink-light) !important; }\n.pink-br.light{ border-color: var(--pink-light); }\n.pink-br-hv.light:hover { border-color: var(--pink-light) !important; }\n\n\/* Dark Pink colors *\/\n.pink-tx.dark { color: var(--pink-dark) !important; }\n.pink-tx-hv.dark:hover { color: var(--pink-dark); }\n.pink-bg.dark { background-color: var(--pink-dark) !important; }\n.pink-bg-hv.dark:hover { background-color: var(--pink-dark) !important; }\n.pink-br.dark{ border-color: var(--pink-dark); }\n.pink-br-hv.dark:hover { border-color: var(--pink-dark) !important; }\n\n```\n\nWe should also reset our HTML styles to make sure our page looks consistent across all browsers. By doing this, we can focus on adding more custom styles to our game, lest save this code in a file named \u201creset.css\u201d. So, let\u2019s roll up our sleeves and dive into the fun part of CSS!\n\n```css\n\/* Reset styles for the html and body elements *\/\nhtml, body {\n border: 0;\n font-family: inherit, sans-serif;\n line-height: 1.5;\n margin: 0;\n padding: 0;\n}\n\/* Reset styles for various conteiner elements *\/\ndiv, span, object, iframe, img, table, caption, thead, tbody, \ntfoot, tr, tr, td, article, aside, canvas, details, figure, hgroup, menu, \nnav, footer, header, section, summary, mark, audio, video {\n border: 0;\n margin: 0;\n padding: 0;\n}\n\/* Reset styles for specific text filled elements *\/\nh1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, address, cite, code, \ndel, dfn, em, ins, q, samp, small, strong, sub, sup, b, i, hr, dl, dt, dd, \nol, ul, li, fieldset, legend, label {\n border: 0;\n font-size: 100%;\n vertical-align: baseline;\n margin: 0;\n padding: 0;\n}\n\/* Set specific big elements to display as block-level *\/\narticle, aside, canvas, figure, figure img, figcaption, hgroup, \nfooter, header, nav, section, audio, video {\n display: block;\n}\n\/* Reset styles for tables *\/\ntable {\n border-collapse: separate;\n border-spacing: 0;\n caption, th, td {\n text-align: left;\n vertical-align: middle;\n }\n}\n\/* Reset styles for images within links *\/\na img {\n border: 0;\n}\n\/* Reset styles for focus state *\/\n:focus {\n outline: 0;\n}\n\/* Ensure that padding does not affect the with of an object *\/\n*{\n box-sizing: border-box;\n}\n\n```\n\nNow that we\u2019ve set up our base CSS files, let\u2019s start doing the real part, lets save ourselves some time by setting the background color and text color.\n\n```css\n\/* Set default for html and body *\/\nhtml, body {\n color: var(--gray);\n background-color:var(--white);\n}\n\/* Set link *\/\na{\n color:var(--pink);\n transition:color .5s;\n}\n\na:hover{\n color:var(--orange);\n}\n\n```\n\nWe\u2019ll keep it simple and sweet for now, but trust us, your game is about to look amazing! Stay tuned for the next article, where we\u2019ll dive into giving some love and style to your HTML. See you there!",
    "excerpt": "Ready to create an awesome game? Learn how to set up the HTML and CSS for your game in this tutorial. Follow the steps and get started!",
    "description": "In this article, we introduce our game, Super Jumper: Save Jumplandia, and provide a step-by-step guide to set up the HTML and CSS for your game. We've included code snippets to help you along the way and added some essential SEO information. Buckle up and join us on this exciting journey to creating an awesome game!",
    "media": [
        "https:\/\/phixel.net\/wp-content\/uploads\/Game-Super-Jumper-Hero-Jax.jpg",
        "https:\/\/phixel.net\/wp-content\/uploads\/PHP-functions-1.jpg"
    ],
    "info": {
        "slug": "side-scrolling-game-part-2",
        "date": "10\/03\/2023",
        "url": "https:\/\/phixel.net\/devdiary\/side-scrolling-game\/html-and-css\/",
        "category": "DevDiary",
        "category_url": "devdiary",
        "emojis": "\ud83c\udfae\ud83d\udcbb\ud83d\udd79\ufe0f\ud83d\udc7e\ud83c\udfa8\ud83d\ude80\ud83d\udcda\ud83d\udca1\ud83d\udd27\ud83c\udf1f",
        "hashtags": {
            "1": "gamedevelopment",
            "2": "HTML",
            "3": "CSS",
            "4": "webdevelopment",
            "5": "tutorial",
            "6": "howto",
            "7": "beginnerfriendly",
            "8": "javascript",
            "9": "coding",
            "10": "programming"
        },
        "tags": [
            "Beginner Friendly",
            "Coding",
            "CSS",
            "Game Development",
            "How-to",
            "HTML",
            "JavaScript",
            "Programming",
            "Tutorial",
            "Web Development \u2014"
        ]
    }
}